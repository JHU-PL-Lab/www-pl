module IntPairs =
       struct
         type t = int * int
         let compare (x0,y0) (x1,y1) =
           match Stdlib.compare x0 x1 with
               0 -> Stdlib.compare y0 y1
             | c -> c
       end

module PairsMap = Map.Make(IntPairs)
    
type eexpr =
  | Var of ident | Function of ident * expr | Appl of int * expr * expr
  | Let of ident * expr * expr | LetRec of ident * ident * expr * expr
  | Plus of expr * expr | Minus of expr * expr | Equal of expr * expr
  | And of expr * expr| Or of expr * expr | Not of expr
  | If of expr * expr * expr | Int of int | Bool of bool
  | Clos of eexpr * store

