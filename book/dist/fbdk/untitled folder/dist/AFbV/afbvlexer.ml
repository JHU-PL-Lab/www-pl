# 1 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
 
  open Afbvparser;;
  
  exception StringSyntaxError of string

# 8 "dist/untitled folder/dist/AFbV/afbvlexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\215\255\084\000\036\001\159\000\024\000\012\000\013\000\
    \018\000\024\000\033\000\004\000\228\255\229\255\230\255\231\255\
    \233\255\235\255\237\255\004\000\001\000\002\000\030\000\034\000\
    \160\000\156\000\150\000\032\000\030\000\035\000\253\255\005\000\
    \000\000\005\000\176\000\255\255\046\000\252\255\251\255\031\000\
    \250\255\032\000\067\000\066\000\078\000\062\000\075\000\107\000\
    \109\000\248\255\105\000\120\000\240\255\224\255\243\255\247\255\
    \117\000\142\000\159\000\152\000\246\255\162\000\239\255\160\000\
    \219\255\154\000\169\000\245\255\155\000\244\255\242\255\241\255\
    \238\255\227\255\156\000\174\000\171\000\226\255\183\000\246\000\
    \225\255\251\000\223\255\251\000\000\001\238\000\254\000\222\255\
    \251\000\017\001\012\001\221\255\032\001\030\001\220\255\244\001\
    \125\001\246\255\201\002\254\255\126\001\248\255\249\255\250\255\
    \251\255\252\255\253\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\039\000\255\255\037\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\023\000\255\255\019\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\000\
    \021\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\006\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\038\000\
    \255\255\255\255\008\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\033\000\033\000\000\000\255\255\000\000\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\000\000\255\255\
    \000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \100\000\000\000\255\255\000\000\100\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\031\000\031\000\000\000\000\000\031\000\031\000\031\000\
    \000\000\000\000\031\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \031\000\000\000\030\000\000\000\000\000\031\000\000\000\000\000\
    \032\000\016\000\033\000\018\000\015\000\021\000\071\000\034\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\011\000\019\000\020\000\017\000\073\000\072\000\
    \070\000\029\000\000\000\007\000\000\000\023\000\026\000\000\000\
    \005\000\025\000\000\000\000\000\022\000\010\000\027\000\028\000\
    \006\000\000\000\000\000\008\000\024\000\000\000\000\000\009\000\
    \000\000\000\000\000\000\013\000\000\000\012\000\000\000\002\000\
    \003\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\014\000\092\000\088\000\083\000\
    \081\000\078\000\074\000\068\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\065\000\039\000\
    \038\000\036\000\037\000\040\000\053\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\050\000\
    \044\000\045\000\046\000\002\000\047\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\035\000\048\000\049\000\051\000\052\000\063\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\042\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \001\000\056\000\055\000\061\000\059\000\255\255\060\000\062\000\
    \058\000\041\000\054\000\043\000\064\000\066\000\067\000\069\000\
    \075\000\076\000\057\000\077\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\079\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\095\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\080\000\082\000\
    \084\000\085\000\086\000\087\000\089\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\090\000\
    \091\000\093\000\094\000\095\000\000\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\099\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\098\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\000\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\000\000\
    \000\000\000\000\000\000\095\000\000\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\097\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\000\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\104\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\000\000\000\000\000\000\000\000\
    \106\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\105\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\103\000\
    \000\000\000\000\000\000\102\000\000\000\101\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\031\000\031\000\
    \255\255\255\255\031\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\031\000\255\255\255\255\
    \000\000\000\000\032\000\000\000\000\000\000\000\020\000\033\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\011\000\019\000\
    \021\000\000\000\255\255\000\000\255\255\000\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\000\000\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\000\000\005\000\006\000\007\000\
    \008\000\009\000\010\000\022\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\023\000\027\000\
    \028\000\029\000\036\000\039\000\041\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\042\000\
    \043\000\044\000\045\000\002\000\046\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\034\000\047\000\048\000\050\000\051\000\056\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\025\000\057\000\058\000\033\000\059\000\061\000\
    \024\000\026\000\025\000\026\000\063\000\065\000\066\000\068\000\
    \074\000\075\000\024\000\076\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\078\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\003\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\079\000\081\000\
    \083\000\084\000\085\000\086\000\088\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\089\000\
    \090\000\092\000\093\000\003\000\255\255\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\096\000\
    \100\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \034\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\096\000\100\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\255\255\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\095\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\255\255\
    \255\255\255\255\255\255\095\000\255\255\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\096\000\100\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\255\255\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\098\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\255\255\255\255\255\255\255\255\
    \098\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\098\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\098\000\
    \255\255\255\255\255\255\098\000\255\255\098\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 15 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
    (token lexbuf)
# 322 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 1 ->
# 16 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( token lexbuf )
# 327 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 2 ->
# 17 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( STRING (read_string lexbuf) )
# 332 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 3 ->
# 18 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( AND )
# 337 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 4 ->
# 19 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( OR )
# 342 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 5 ->
# 20 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( NOT )
# 347 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 6 ->
# 21 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( FUNCTION )
# 352 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 7 ->
# 22 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( FUNCTION )
# 357 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 8 ->
# 23 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( IF )
# 362 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 9 ->
# 24 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( THEN )
# 367 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 10 ->
# 25 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( ELSE )
# 372 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 11 ->
# 26 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( LET )
# 377 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 12 ->
# 27 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( IN )
# 382 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 13 ->
# 28 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( GOESTO )
# 387 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 14 ->
# 29 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( SENDTO )
# 392 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 15 ->
# 30 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( BOOL false )
# 397 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 16 ->
# 31 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( BOOL true )
# 402 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 17 ->
# 32 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( EOEX )
# 407 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 18 ->
# 33 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( PLUS )
# 412 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 19 ->
# 34 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( MINUS )
# 417 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 20 ->
# 35 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( EQUAL )
# 422 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 21 ->
# 36 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( LPAREN )
# 427 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 22 ->
# 37 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( RPAREN )
# 432 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 23 ->
# 38 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( SEMICOLON )
# 437 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 24 ->
# 39 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( COMMA )
# 442 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 25 ->
# 40 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( PIPE )
# 447 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 26 ->
# 41 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( LBRACKET )
# 452 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 27 ->
# 42 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( RBRACKET )
# 457 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 28 ->
# 43 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( CONS )
# 462 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 29 ->
# 44 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( MATCH )
# 467 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 30 ->
# 45 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( WITH )
# 472 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 31 ->
# 46 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( FST )
# 477 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 32 ->
# 47 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( SND )
# 482 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 33 ->
# 48 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( CREATE )
# 487 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 34 ->
# 49 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( PRINT )
# 492 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 35 ->
# 50 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( HEAD )
# 497 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 36 ->
# 51 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( TAIL )
# 502 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 37 ->
# 52 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( INT (int_of_string(Lexing.lexeme lexbuf)) )
# 507 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 38 ->
# 53 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                           ( VARIANT (Lexing.lexeme lexbuf) )
# 512 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 39 ->
# 54 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( IDENT (Lexing.lexeme lexbuf) )
# 517 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 40 ->
# 55 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                       ( raise Exit )
# 522 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and read_string lexbuf =
   __ocaml_lex_read_string_rec lexbuf 96
and __ocaml_lex_read_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 59 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( 
                    (* Must _explicitly_ force ordering due to side effects *)
                    let text = Lexing.lexeme lexbuf in
                    let rest = read_string lexbuf in
                    text ^ rest
                  )
# 539 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 1 ->
# 65 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "" )
# 544 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 2 ->
# 66 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "/" ^ read_string lexbuf )
# 549 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 3 ->
# 67 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "\\" ^ read_string lexbuf )
# 554 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 4 ->
# 68 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "\"" ^ read_string lexbuf )
# 559 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 5 ->
# 69 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "\n" ^ read_string lexbuf )
# 564 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 6 ->
# 70 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "\r" ^ read_string lexbuf )
# 569 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 7 ->
# 71 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( "\t" ^ read_string lexbuf )
# 574 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 8 ->
# 72 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( raise (StringSyntaxError ("Illegal string character: " ^ Lexing.lexeme lexbuf)) )
# 579 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | 9 ->
# 73 "dist/untitled folder/dist/AFbV/afbvlexer.mll"
                  ( raise (StringSyntaxError ("String is not terminated")) )
# 584 "dist/untitled folder/dist/AFbV/afbvlexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_string_rec lexbuf __ocaml_lex_state

;;

