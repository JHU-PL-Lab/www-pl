Appel:
Schedule

       9/15: Introduction; ML Language. Ullman 1-9, Appel 1 
Week 1: 
       9/18: Regular Expressions. ASU 3.1--3.3 
       9/20: Finite Automata. ASU 3.6--3.9 Interpreter due 
       9/22: Lex. ASU 3.5, ML-Lex manual, Appel 2 . 
Week 2: 
       9/25: More on ML. Ullman 10-17 
       9/27: Context-Free Grammars. ASU 4.1-4.3 
       9/29: ML again; Parsing. 
Week 3: 
       10/2: Yacc. ASU 4.9; ML-Yacc manual; Appel 3 Lexer due 
       10/4: Toy language; Abstract syntax. Appel A, 4 
       10/6: Symbol tables, declarations. Appel 5.1; ASU 6, 7.6 
Week 4: 
       10/9: Type checking. Appel 5.2 Parser due 
       10/11: Stack frames. Appel 6, ASU 7 
       10/13: LL Parser generation.ASU 4.4 
Week 5: 
       10/16: LR Parser generation. ASU 4.5, 4.7, 4.8 Abstract Syntax due

       10/18: More semantic analysis. Appel 5,6 
       10/20: Parser Error Recovery. Burke and Fisher 
Week 6: 
       10/23: Polymorphic typechecking. ASU 6.6,6.7 
       10/25: EXAM. covers thru Oct. 16 
       10/27 : Intermediate trees. Appel 7.1 
Fall Break 
Week 7: 
       11/6: Expressions --> trees. Appel 7.2 Type Checker due 
       11/8 : Declarations --> trees. Appel 7.3 
       11/10: Canonical trees, Traces. Appel 8 
Week 8: 
       11/13: Instruction selection. Appel 9, ASU 9.10-9.12 Fake Output due

       11/15: Liveness analysis. Appel 10,11; ASU 9.7, 10.5, 10.6 
       11/17: Register allocation. Appel 12; ASU 9.7 
Week 9: 
       11/20: Closures, garbage collection. Appel 12, 11 Mostly correct module
due 
       11/22: Basic blocks. ASU 9.1--9.6 
Week 10: 
       11/27: Dataflow analysis. ASU 10.1--10.5 Warranted correct module due

       11/29: Loop optimization. ASU 10.6--10.10 
       12/1: Static Single-Assignment Form. Wegman and Zadeck 
Week 11: 
       12/4: Software Pipelining. Aiken and Nicolau Documented, bug-fixed module
due 
       12/6: Pipelining with resource constraints. 
       12/8: Instruction scheduling, branch prediction. 
Week 12: 
       12/11: Memory hierarchies. Alpha appendix Compiler due 
       12/13: Memory hierarchy optimization. Wolf and Lam, Mowry et al.*

       12/15: Standard ML of New Jersey. Appel91 
January 
       1/12: Project due 
       Final Exam, 

Copyright (c) 1995 by Andrew Appel

