<!--#include virtual="header.html" -->

</div>

<div id="content">

<h2>PL Supplementary Resources </h2>
<p>
Here is a list of the best resources to supplement the
material presented in lecture.  Unfortunately there is a wide range of notation used
so past experience has been these are not particularly helpful for this course.  

<h2>References by topic</h2>

<h3>ML/OCaml</h3>
<p>
See the <a
href="ocaml/">Course OCaml Page</a>.

<h3> Operational Semantics </h3>
<p>
See the <a
href="http://en.wikipedia.org/wiki/Operational_semantics">Wikipedia
entry</a> for good references.<p>


<a href="http://homepages.inf.ed.ac.uk/gdp/publications/sos_jlap.pdf">Plotkin's
Structured Operational Semantics Notes</a> is the classic tutorial
reference on operational semantics.
<p>

The book <cite>The Semantics of Programming Languages </cite> by
Matthew Hennessy.  This book is a sophmore-level treatment of
operational semantics.  If you are in need of a tutorial on
operational semantics this book is highly recommended.  It is <a
href="http://www.cogs.susx.ac.uk/users/matthewh/semnotes.ps.gz">available
online</a> as well.<p>

<H3>Type Systems and Type Inference</H3>
<p>
<cite>Semantics of Programming Languages</cite> by Carl Gunter.
Chapter 2 gives a nice introduction to the typed lambda calculus.
Chapter 7 covers type inference.<p>

<cite>Types and Programming Languages </cite> by
Benjamin C. Pierce is the leading advanced reference.

<p>
Dave Schmidt has a book, <cite>The Structure of Typed Programming 
Languages </cite>
which I am not very familiar with but should cover the basic concepts.  
<p>

<h3>General PL Texts</h3>

<a href="http://cs.brown.edu/courses/cs173/2012/book/">Programming Languages: Application and Interpretation</a> is a great general textbook which covers some of the topics of this course.  You can't just skim a mid-chapter however due to the pervasive use of Scheme as notation.
<p>

</div>


<!--#include virtual="footer.html" -->
