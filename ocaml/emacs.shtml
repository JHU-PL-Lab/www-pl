<!--#include virtual="/pl/header.html" -->	 
</div>

<!-- Main -->
<div id="main" class="wrapper style4">

<!-- Content -->
<div id="content" class="container">
<section>
<header class="major">
<h2>Emacs</h2>
</header>

<p>The <a href="http://www.gnu.org/software/emacs/">Emacs homepage</a>
  has all the information on emacs.</p>
<h3>Getting emacs</h3>
<dl>
  <dt><strong>Windows</strong>
  <dd>Precompiled binaries are found <a
      href="http://ftp.gnu.org/gnu/windows/emacs/">here</a>. <a href="http://www.gnu.org/software/emacs/windows/ntemacs.html">Here is a
      FAQ on Windows and emacs.</a>  Note that Windows does not always work so well with emacs.
  <dt><strong>MacOS</strong>
  <dd>MacOS
      comes with emacs, but that version supports terminal use only
      and so you want a better version.  A prebuilt binary of full
      emacs is found <a
      href="http://emacsformacosx.com">here</a>. 
  <dt><strong>Linux</strong>
  <dd>Linux comes with emacs installed.
</dl>

<h3>Learning Emacs</h3>
<p>
  If you are not familiar with emacs,  <a href="http://www.gnu.org/software/emacs/manual/">Here is the manual</a>.  A good <a
href="http://jeremy.zawodny.com/emacs/">emacs tutorial
webpage</a>.
<p>

<h3>Using emacs with OCaml: Tuareg mode and Merlin mode</h3>
<p>
Tuareg mode performs syntax highlighting and runs an OCaml shell within emacs, and Merlin mode adds more advanced OCaml-specific editing commands.  To install them, type into a terminal <tt>opam install user-setup tuareg</tt> if they are not already installed, and then type <tt>opam user-setup install</tt> which will patch your emacs startup files - restart emacs and Tuareg and Merlin should work.

</ul>
<h3>Using Tuareg Mode</h3>
<p>
In emacs, every file that ends in <kbd>.ml</kbd> will automatically
load Tuareg mode.

The tuareg-mode distribution includes no documentation but is easy to
use;  <kbd>control-h m</kbd> from within emacs gets you the 
command list.  The main useful commands (C-c means control-C, etc) are
<pre>
C-c C-e		evaluate the phrase the cursor is sitting in the middle of
C-c C-r		evaluate the whole selected region
C-c C-s		show the shell window; will automatically start an ocaml shell if not running
C-c `		go to exact error location in the source</pre>


<h4>Merlin mode</h4>
<p>
Merlin mode is useful because it can also display types of expressions and take you to a definition of a variable from its use.  See <a href="https://opam.ocaml.org/blog/turn-your-editor-into-an-ocaml-ide/">here</a> for more information on Merlin and how to install it.  With Merlin installed,  useful keys available include
<pre>
C-c C-l         from a variable use jump to its definition.
C-c &           merlin-pop-stack (go back to where you were before above)
C-c C-t         display the type of the enclosing expression.
</pre>




</section>
</div>
</div>


<!--#include virtual="/pl/footer.html" -->	 

