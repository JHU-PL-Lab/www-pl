<!--#include virtual="/pl/header.html" -->

</div>

<div id="content">

<h2>Emacs</h2>
The <a href="http://www.gnu.org/software/emacs/">Emacs homepage</a>
has all the information on emacs.
<h3>Getting emacs</h3>
<dl>
  <dt><strong>Windows</strong>
  <dd>Precompiled binaries are found <a
      href="http://ftp.gnu.org/gnu/windows/emacs/">here</a>. <a href="http://www.gnu.org/software/emacs/windows/ntemacs.html">Here is a
      FAQ on Windows and emacs.</a>  Note that Windows does not always work so well with emacs.
  <dt><strong>Macintosh OS X</strong>
  <dd>OS X
      comes with emacs, but that version supports terminal use only
      and so you want a better version.  A prebuilt binary of full
      emacs is found <a
      href="http://emacsformacosx.com">here</a>. 
  <dt><strong>Linux</strong>
  <dd>Linux comes with emacs installed.
</dl>

<h3>Learning Emacs</h3>
<p>
  If you are not familiar with emacs,  <a href="http://www.gnu.org/software/emacs/manual/">Here is the manual</a>.  A good <a
href="http://jeremy.zawodny.com/emacs/">emacs tutorial
webpage</a>.
<p>

<h3>Using emacs with OCaml: Tuareg mode and Merlin mode</h3>
<p>
  You will need Tuareg mode, the ocaml mode addition to emacs, to effectively edit OCaml
programs.  Here are two different ways to install it.<p>

<ul>
  <li>Use the <a href="https://marmalade-repo.org">Marmelade</a> emacs package manager to install Tuareg mode: configure Marmelade as described on the aforelinked page, and execute <code>package-list-packages</code> to get the full list, scroll down to Tuareg and hit the install button.
  <li>Or, go to the <a href="http://www.emacswiki.org/emacs/TuaregMode">Tuareg Mode</a> page, download the files and follow the instructions.  Note you need to put the files in the indicated <code>~/.elisp/</code> directory and edit your <code>~/.emacs</code> file as indicated there, or it will not work. 

</ul>
<h3>Using Tuareg Mode</h3>
<p>
In emacs, every file that ends in <kbd>.ml</kbd> will automatically
load Tuareg mode.

The tuareg-mode distribution includes no documentation but is easy to
use;  <kbd>control-h m</kbd> from within emacs gets you the 
command list.  The main useful commands (C-c means control-C, etc) are
<pre>
C-c C-e		evaluate the phrase the cursor is sitting in the middle of
C-c C-r		evaluate the whole selected region
C-c C-s		show the shell window; will automatically start an ocaml shell if not running
C-c `		go to exact error location in the source</pre>

When emacs asks for the <code>Ocaml toplevel to run</code>, you hopefully can just hit return and OCaml will start.  If it does not, you may need to enter the full path to the <code>ocaml</code> binary on your computer.    Use Unix shell command <code>which ocaml</code> to find that full path on Linux/Mac.  Once you have that full path you can add the line <pre>(defvar tuareg-interactive-program "/Users/scott/.opam/4.02.1/bin/ocaml")</pre> (assuming <code>/Users/scott/.opam/4.02.1/bin/ocaml</code> is what <code>which ocaml</code> reported) to your <code>~/.emacs</code> file and you won't need to type it each time you launch a new toplevel.
<h4>Merlin mode</h4>
<p>
Merlin mode is useful because it can also display types of expressions and take you to a definition of a variable from its use.  See <a href="https://opam.ocaml.org/blog/turn-your-editor-into-an-ocaml-ide/">here</a> for more information on Merlin and how to install it.  With Merlin installed,  useful keys available include
<pre>
C-c C-l         from a variable use jump to its definition.
C-c &           merlin-pop-stack (go back to where you were before above)
C-c C-t         display the type of the enclosing expression.
</pre>
  
</div>


<!--#include virtual="/pl/footer.html" -->



