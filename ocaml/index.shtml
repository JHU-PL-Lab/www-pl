<!--#include virtual="/pl/header.html" -->	 
	 </div>

    
    <!-- Main -->
      <div id="main" class="wrapper style4">

        <!-- Content -->
        <div id="content" class="container">
          <section>
            <header class="major">
	      <h2>OCaml Information</h2>
            </header>


<h3>OCaml Lecture Information</h3>
<ul>
  <li>The <a href="code/lecture.ml">examples of OCaml that were run in
class</a>. We pretty much just run through these as the lecture.  For the separate compilation topic we cover <a href="code/sep.zip">this example (zipped)</a>
  <li>The <a href="../lectures/caml-intro.html">PL OCaml Lecture
      Notes</a> - these are some older notes of mine with more
      explanations.

</ul>

<h3>Our ML Dialect</h3> We are going to use <a
href="http://caml.inria.fr/">OCaml</a>, version 4.04.0.  Earlier/later versions will work perfectly fine for your own coding, but the binary distibutions of the FbDK are very picky on which version they are run under; we will supply binaries for other versions if people are having problems getting 4.04.0 running.
<p>

<h3>Installing OCaml 4.04.0 on Your Machine</h3>
For all systems we recommend you install and use the <a href="https://opam.ocaml.org">OPAM packaging system</a> for OCaml.  OPAM is a flexible system which also allows you to install any version of Ocaml you want once you have OPAM installed.
<ul>
  <li> For Linux or Mac see <a href="http://ocaml.org/docs/install.html">OCaml.org's install page</a> for instructions.  The key steps are 1) install the <code>opam</code> binary via e.g. running the shell script  <a href="https://opam.ocaml.org/doc/Install.html#Binaryinstaller">opam_installer.sh</a>, 2) run command <code>opam switch 4.04.0</code> to build OCaml version 4.04.0; and 3) add the line <code>eval `opam config env`</code> to your <code>.profile/</code><code>.bashrc</code> shell init file to point your shell to the <code>ocaml</code> binary that <code>opam</code> installed at <code>~/.opam/4.04.0/bin/ocaml</code>.
  <li> For OCaml on Windows we recommend grabbing this <a href="http://gallium.inria.fr/~protzenk/caml-installer/ocaml-4.04.0-i686-mingw64-opam-1.exe">exe</a>  which will get you an OPAM installation set to version 4.04.0.  the <code>opam switch</code> directive (as well as other OPAM commands) do not reliably work under Windows so you need to download this 4.04.0 binary.  If you have a Linux VM on your Windows box you may want to use it to get a Linux install of OCaml.
</ul>
<p>
OCaml 4.04.0 should be available  on all department Linux machines via the shell
command  <kbd>ocaml</kbd>. <p>

<h3>OCaml development environments</h3>

We <em>strongly</em> recommend you run OCaml from something besides the
shell directly. 
<dl>
  <dt><strong>Emacs</strong>
  <dd>Today this is what most OCaml programmers are using.  See <a href =
emacs.shtml>information on running OCaml 
inside Emacs</a> to get going.  
  <dt><a href="https://atom.io">Atom</a>
  <dd>This new text editor has a caml syntax highlighting mode. Install Atom and search for the ocaml packages within Atom.  OCamltoplevel is also a package to run an ocaml toplevel within Atom, but it is in a very early stage of development, is hard to install, and may not work for you.
  <dt><strong>vim <a
    href="http://www.lix.polytechnique.fr/~dbaelde/productions/omlet.html">OMLet</a></strong>
  <dd>If you like vim, it now has a caml
    mode, OMLet.  The
    above two modes are significantly better, all this mode offers is
      automatic indentation and keyword highlighting. 
  <dt><a href="http://www.eclipse.org">Eclipse</a> <a href="http://www.algo-prog.info/ocaide/"><strong>OCaIDE</strong></a>
  <dd>
This is a simple Eclipse plugin for OCaml; unfortunately it only provides basic functionality since it is not maintained anymore. See <a href =
ocaide.shtml>information on using OCaIDE</a> for more information.
</dl>

<h4>Better feedback from emacs or vim with Merlin</h4>

<ul>
  <li>Merlin is a static analysis tool which you can install which will give you many of the features of a modern IDE inside of Emacs or vim: find a definition from a use, display types, etc.
  <li>See <a href="https://opam.ocaml.org/blog/turn-your-editor-into-an-ocaml-ide/">OPAM Merlin page</a> for installation instructions.
    <li>It is a bit bleeding edge still.  If you are getting an error on startup with emacs, you may need to pull the merlin version from github: execute  <code>opam pin add merlin https://github.com/the-lambda-church/merlin.git</code>
    </ul>

<h4><code>utop</code>: A better top-loop</h4>
<p>
 <ul>
   <li>There is a newer top loop which if you have OPAM working you can install easily: just type <code>opam install utop</code>.  
     <li>With utop you can scroll up and down your OCaml input history, do simple editing on previous inputs, etc.
     <li>See the <a href="https://github.com/diml/utop">utop README</a> for more information on what it can do for you.  
     </ul>
<h3>OCaml Information on the Web</h3>

<dl>
  <dt><a href="http://ocaml.org">ocaml.org</a>
  <dd>This is now the home of OCaml for finding downloads, documentation, etc.  The <a href="http://ocaml.org/learn/tutorials/">tutorials</a> are also very good.
  <dt><a href="http://caml.inria.fr/">The INRIA OCaml Homepage</a>
  <dd>The old home of OCaml where you can find core library documentation.
  <dt><a href="http://caml.inria.fr/pub/docs/manual-ocaml/">The OCaml
      manual</a> (download your local copy from the links at the top).
  <dd><a
      href="http://caml.inria.fr/pub/docs/manual-ocaml-4.01/coreexamples.html">Part
      I Chapter 1</a> is a brief but readable introduction to the core
      language.  This
      will be our main reference.  You may occasionally need to look at
      Part II, the reference manual, Part III for some commands, and
      Part IV for libraries (the <a
      href="http://caml.inria.fr/pub/docs/manual-ocaml-4.01/core.html">core
      library</a> docs are particularly useful for standard string,
      etc functions built into ocaml), and the <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html">Pervasives module</a> includes functions etc available at all times in the top-level.
</dl>
<h4>Additional supplementary information</h4>
<dl>
  <dt><a href="https://www.youtube.com/playlist?list=PLea0WJq13cnCef-3KSU3qWFge9OGUlKx1">OCaml Youtube Tutorial</a>
  <dd>If you like watching videos to learn things here is a complete collection for OCaml.
  <dt><a
      href="https://realworldocaml.org/v1/en/html/index.html">Real World OCaml</a> by Jason Hickey, Anil Madhavapeddy, and Yaron Minsky
  <dd>A relatively new OCaml book available online.
  <dt><a href="http://ocaml.org/learn/books.html">Books</a>
  <dd>Still more books, from the ocaml.org page.
  <dt><a href="http://www.seas.upenn.edu/~cis341/current/programming_style.shtml">UPenn OCaml Style Guide</a>
  <dd>A good guide to proper formatting and other style concerns for OCaml.
</dl>



	    
          </section>
        </div>
      </div>


<!--#include virtual="/pl/footer.html" -->	 


    
