<!--#include virtual="/~scott/pl/header.html" -->

<p id="slogan">600.426&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Prof. <a href="contact.shtml">Scott F. Smith</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Monday/Wednesday 1:30-2:45, Shaffer 202<br><br>

</div>

<div id="content">


<h2>Course Summary</h2> This course is a careful study of programming
language <em>features</em>: basic data, data structures, functions,
objects, types, concurrency, etc.  Each feature is studied in intimate terms,
through the implementation of interpreters and then through
operational semantics, a mathematical approach to program meaning.
The OCaml dialect of the ML programming language will be used.  OCaml
has features such as type inference, a higher-order functional basis,
and an elegant module system, that make it worthy of study in its own
right.</p> <p>
<h2>What you will gain from this course</h2>
<ul>
  <li>You will attain a deep understanding of how programming languages are
      structured and why they work well (or not so well).
  <li>You will understand and appreciate the functional,
      object-oriented, stateful, and concurrent 
       programming paradagims, and the meaning and importance of
      features such as modules, statefulness, and type systems. 
  <li>You will learn some of the mathematical principles behind
      programming languages. 
  <li>You will become a good OCaml programmer.
</ul>  <p>


<img src="images/water.jpg"  alt=" image"  />
<p>

<p class="readmore"><a href="/~scott/pl/information.shtml">More
information on how the course will run</a> &raquo;</p>

<p class="box"><strong>Prerequisites:</strong> 
This course is mathematical in nature and so is recommended for
upper-level undergraduate students with strong mathematics skills, or
for graduate students.  It is not recommended for sophomores.
</p>

</div>

<!--#include virtual="/~scott/pl/footer.html" -->

