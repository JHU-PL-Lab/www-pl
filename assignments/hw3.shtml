<!--#include virtual="/pl/header.html" -->

</div>

<div id="content">


<h2>Homework-3: Interpreter and friends</h2>
<h4>Due: Wed March 5th</h4>
<p>



<ol> <li>Write an interpreter for F&#x266d; as defined in the book.  You need to implement all features
  <strong>except</strong> for <code>Let Rec</code>, which is for extra
  credit only.  <li>Answer the problems in <a
  href="hw3.ml">hw3.ml</a>.  </ol> <h3>The F&#x266d; Development Kit
  (FbDK)</h3>

We have provided you with the FbDK to make your job easier.
<ul>
  <li>The FbDK distribution is <a href="http://pl.cs.jhu.edu/pl/book/dist/">here</a> in
      both source and binary form.  The FbDK is described in detail in Appendix A
of <a
href="http://pl.cs.jhu.edu/pl/book/dist/book/book.pdf">the book</a>.
  <li>The FbDK
source distribution includes code and scripts to build a standalone F&#x266d;
interpreter, a F&#x266d; top loop in analogy to the <code>ocaml</code> top
loop.  It includes a parser and pretty printer.  All you need to do is write an
<code>eval</code> function in the file <a
href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/source/fbdk-1.23/src/Fb/fbinterp.ml"><code>.../src/Fb/fbinterp.ml</code></a>.
  <li>The distribution file
<a
href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/source/fbdk-1.23/src/Fb/fbast.ml"><code>.../src/Fb/fbast.ml</code></a>
is a variant that defines the grammar to be used for F&#x266d;.
  <li>The FbDK also contains a complete BOOL interpreter
for the little boolean language in the subdir <a
href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/source/fbdk-1.23/src/BOOL/"><code>.../src/BOOL/</code></a>.
The complete source for the BOOL evaluator is also given.
  <li>The <a
      href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/binaries/">FbDK
      binary distribution</a> includes bytecodes for a correct F&#x266d; interpreter <code>fb.byte</code>
- executed as <code>ocamlrun fb.byte</code> - that you can test your
      interpreter against.
<li>You may find it handy to debug your interpreter with help of the
    interactive <code>ocaml</code> top loop.
Once you have <code>make</code>'d all the files, run <code>ocaml</code> from the <code>src/Fb/</code> directory
	and <code>#use "fbdktoploop.ml";;</code> which loads the <a
href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/source/fbdk-1.23/src/Fb/fbdktoploop.ml"><code>.../src/Fb/fbdktoploop.ml</code></a>
    file -- this will load the
	F&#x266d; interpreter structures.  Look at the source of this file for
    the functions it contains. (NOTE: You may need to add a <code>#cd [your Fb directory here] ;;</code> at the top of the file to make it load correctly. Check the comments in the file for details)
<li>The F&#x266d;DK distribution also contains the source of all F&#x266d; code examples in
    the book, <a
href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/source/fbdk-1.23/src/Fb/fbexamples.ml"><code>.../src/Fb/fbexamples.ml</code></a>
  </ul>
  <h3>Hints</h3>
  <ol>
    <li>For OcaIDE and Eclipse configuration instructions, see the course <a href="../ocaml/ocaide.shtml">OcaIDE</a> page.</li>
    <li>Use the F&#x266d; operational semantics rules as the guidepost: all you
	are doing is implementing those rules.</li>
    <li>For a warm-up, get the numbers and booleans to evaluate
properly,
then tackle functions. </li>
    <li>You will need to write several auxiliary functions for
performing substitution, etc. </li>
    <li>Declare and raise appropriate exceptions. </li>
    <li>The file <a
	href="http://pl.cs.jhu.edu/pl/book/dist/FbDK/downloads/source/fbdk-1.23/src/Fb/fbexamples.ml">.../src/Fb/fbexamples.ml</a>
	in the distribution includes many F&#x266d; examples.
    </li>
    <li>
        You will probably want to write at least three functions:
        <ol type="i">
            <li><tt>eval</tt>, a stub for which is provided,</li>
            <li><tt>subst</tt>, a function implementing variable substitution</li>
            <li><tt>check_closed</tt>, a function which determines whether or not an expression is closed</li>
        </ol>
        Remember that you must raise an exception if you are provided an expression which is not closed, such as <tt>Function x -> y</tt>.
    </li>
  </ol>
  <h3>Submission</h3>
For this part of the assignment, submit only the <code>fbinterp.ml</code> file that will "plug in" to the FbDK and
  build the interpreter and the <code>hw3.ml</code> file containing your F&#x266d; answers. Use Blackboard for submission as usual.

</div>


<!--#include virtual="/pl/footer.html" -->
