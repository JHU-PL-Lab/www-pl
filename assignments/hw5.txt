600.426 - Programming Languages
JHU Spring 2013
Homework - 5 Part 2 (35 Points)

----------------------------------------------------------------------------------------
HEADER: PLEASE FILL THIS IN
----------------------------------------------------------------------------------------

Name                  :
List of team Members  :
List of discussants   :

----------------------------------------------------------------------------------------
Section 1: Basic Types
----------------------------------------------------------------------------------------

1. Show the type derivation for the following TFb expression:
     Function x:int -> (x = 0) And False

   [7 Points]

----------------------------------------------------------------------------------------
Section 2: Subtyping
----------------------------------------------------------------------------------------

2a. Write down a subtype for the following type:
      ( {x:Int; y:Int} -> {pt:{x:Int; y:Int}} ) -> {x:Int; y:Int} -> {x:Int; y:Int}

    Your answer cannot use the types {x:Int; y:Int}} or {pt:{x:Int; y:Int}} in it.

    [9 Points]

2b. Show the type derivation for the following STFbR expression:
       Let f:({x:Int} -> Int) = (Function r: {x:Int} -> (r.x + 1)) In
	     f {x=3;y=4} + f {x=2;y=2;z=False}

    Remember that Let is just a macro. See Page 32 of the book for the
    definition

    [9 Points]

----------------------------------------------------------------------------------------
Section 3: Type Inference
----------------------------------------------------------------------------------------

3. Extend the type inference system presented in the book to support State. The language
   syntax is just FbS.

   You need to include only the new rules and any extra closure rules that you may need.

   [10 Points]
